"use client"
import {usePathname} from "next/navigation"
import Link from "next/link"
import styles from "./page-navigation.module.css"

const PAGE_ROUTES = [
  "/",
  // "/v0plex",
  // "/v0plex/abt_v0p",
  "/v0plex/abt_v0p/ideas_from_ibm_carbon",
  "/v0plex/abt_v0p/v0dev",
  "/v0plex/abt_v0p/limitation_of_mainstream_blogs_framework",
  "/v0plex/abt_v0p/future_works",
  // "/v0plex/example_pages",
  "/v0plex/example_pages/test-1",
  "/v0plex/example_pages/test-2",
  "/v0plex/example_pages/test-3",
  "/v0plex/v0plex_components",
  "/v0plex/v0plex_components/todo",
  // "/before_graduate",
  "/before_graduate/learning_raw_pointer_in_cpp",
  "/before_graduate/learning_shared_pointer_in_cpp",
  "/before_graduate/learning_operator_overloading_in_cpp"
]

const PAGE_TITLES: Record<string, string> = {
  "/": "Home",
  // "/v0plex": "v0plex: A Theme Generated by v0.dev",
  // "/v0plex/abt_v0p": "What Is v0plex And How It Is Generated",
  "/v0plex/abt_v0p/ideas_from_ibm_carbon": "Ideas From IBM Carbon Design Systems",
  "/v0plex/abt_v0p/v0dev": "Rising Of Generated LLM - Use v0.dev",
  "/v0plex/abt_v0p/limitation_of_mainstream_blogs_framework": "Limitations & Disadvantages Of Main Stream Blog Framework",
  "/v0plex/abt_v0p/future_works": "Future Works For v0plex",
  // "/v0plex/example_pages": "v0plex Example Pages",
  "/v0plex/example_pages/test-1": "Exampled Use Case 1",
  "/v0plex/example_pages/test-2": "Exampled Use Case 2",
  "/v0plex/example_pages/test-3": "Exampled Use Case 3",
  "/v0plex/v0plex_components": "v0plex Components",
  "/v0plex/v0plex_components/todo": "To Be Continued",
  // "/before_graduate": "Chinese Archive Blogs Before 2022",
  "/before_graduate/learning_raw_pointer_in_cpp": "C++中的裸指针",
  "/before_graduate/learning_shared_pointer_in_cpp": "智能指针之shared_ptr",
  "/before_graduate/learning_operator_overloading_in_cpp": "Operator Overloading原理"
}

const normalizePath = (path: string) => {
  return path.replace(/\/$/, "") || "/"
}

export default function PageNavigation() {
  const pathname = usePathname()
  const normalizedPath = normalizePath(pathname)
  const currentIndex = PAGE_ROUTES.indexOf(normalizedPath)
  
  const isValidPath = currentIndex >= 0
  
  const prevPage = isValidPath && currentIndex > 0
    ? PAGE_ROUTES[currentIndex - 1]
    : null
  
  const nextPage = isValidPath && currentIndex < PAGE_ROUTES.length - 1
    ? PAGE_ROUTES[currentIndex + 1]
    : null
  
  const prevTitle = prevPage ? PAGE_TITLES[prevPage] : "None"
  const nextTitle = nextPage ? PAGE_TITLES[nextPage] : "None"
  
  return (
    <div className={styles.navigation}>
      <div className={styles.navContainer}>
        {prevPage ? (
          <Link href={prevPage} className={styles.navLink}>
            <div className={styles.navLabel}>Previous</div>
            <div className={styles.navTitle}>{prevTitle}</div>
          </Link>
        ) : (
          <div className={`${styles.navLink} ${styles.disabled}`}>
            <div className={styles.navLabel}>Previous</div>
            <div className={styles.navTitle}>None</div>
          </div>
        )}
        
        {nextPage ? (
          <Link href={nextPage} className={`${styles.navLink} ${styles.nextLink}`}>
            <div className={styles.navLabel}>Next</div>
            <div className={styles.navTitle}>{nextTitle}</div>
          </Link>
        ) : (
          <div className={`${styles.navLink} ${styles.disabled}`}>
            <div className={styles.navLabel}>Next</div>
            <div className={styles.navTitle}>None</div>
          </div>
        )}
      </div>
    </div>
  )
}